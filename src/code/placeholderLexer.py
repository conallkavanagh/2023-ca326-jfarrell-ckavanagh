# Generated from placeholder.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,6,112,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
        2,20,7,20,2,21,7,21,2,22,7,22,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,
        4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,
        1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,4,20,
        97,8,20,11,20,12,20,98,1,21,4,21,102,8,21,11,21,12,21,103,1,22,4,
        22,107,8,22,11,22,12,22,108,1,22,1,22,0,0,23,1,0,3,0,5,0,7,0,9,0,
        11,0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,1,
        37,2,39,3,41,4,43,5,45,6,1,0,20,2,0,65,65,97,97,2,0,68,68,100,100,
        2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
        104,104,2,0,73,73,105,105,2,0,76,76,108,108,2,0,78,78,110,110,2,
        0,79,79,111,111,2,0,80,80,112,112,2,0,82,82,114,114,2,0,83,83,115,
        115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,87,87,119,119,2,0,89,
        89,121,121,3,0,65,90,97,122,124,124,1,0,48,57,3,0,9,10,13,13,32,
        32,97,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
        0,0,0,0,45,1,0,0,0,1,47,1,0,0,0,3,49,1,0,0,0,5,51,1,0,0,0,7,53,1,
        0,0,0,9,55,1,0,0,0,11,57,1,0,0,0,13,59,1,0,0,0,15,61,1,0,0,0,17,
        63,1,0,0,0,19,65,1,0,0,0,21,67,1,0,0,0,23,69,1,0,0,0,25,71,1,0,0,
        0,27,73,1,0,0,0,29,75,1,0,0,0,31,77,1,0,0,0,33,79,1,0,0,0,35,81,
        1,0,0,0,37,85,1,0,0,0,39,90,1,0,0,0,41,96,1,0,0,0,43,101,1,0,0,0,
        45,106,1,0,0,0,47,48,7,0,0,0,48,2,1,0,0,0,49,50,7,1,0,0,50,4,1,0,
        0,0,51,52,7,2,0,0,52,6,1,0,0,0,53,54,7,3,0,0,54,8,1,0,0,0,55,56,
        7,4,0,0,56,10,1,0,0,0,57,58,7,5,0,0,58,12,1,0,0,0,59,60,7,6,0,0,
        60,14,1,0,0,0,61,62,7,7,0,0,62,16,1,0,0,0,63,64,7,8,0,0,64,18,1,
        0,0,0,65,66,7,9,0,0,66,20,1,0,0,0,67,68,7,10,0,0,68,22,1,0,0,0,69,
        70,7,11,0,0,70,24,1,0,0,0,71,72,7,12,0,0,72,26,1,0,0,0,73,74,7,13,
        0,0,74,28,1,0,0,0,75,76,7,14,0,0,76,30,1,0,0,0,77,78,7,15,0,0,78,
        32,1,0,0,0,79,80,7,16,0,0,80,34,1,0,0,0,81,82,3,25,12,0,82,83,3,
        1,0,0,83,84,3,33,16,0,84,36,1,0,0,0,85,86,3,15,7,0,86,87,3,19,9,
        0,87,88,3,19,9,0,88,89,3,21,10,0,89,38,1,0,0,0,90,91,3,13,6,0,91,
        92,3,17,8,0,92,93,3,13,6,0,93,94,3,27,13,0,94,40,1,0,0,0,95,97,7,
        17,0,0,96,95,1,0,0,0,97,98,1,0,0,0,98,96,1,0,0,0,98,99,1,0,0,0,99,
        42,1,0,0,0,100,102,7,18,0,0,101,100,1,0,0,0,102,103,1,0,0,0,103,
        101,1,0,0,0,103,104,1,0,0,0,104,44,1,0,0,0,105,107,7,19,0,0,106,
        105,1,0,0,0,107,108,1,0,0,0,108,106,1,0,0,0,108,109,1,0,0,0,109,
        110,1,0,0,0,110,111,6,22,0,0,111,46,1,0,0,0,4,0,98,103,108,1,6,0,
        0
    ]

class placeholderLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Say = 1
    Loop = 2
    Init = 3
    WORD = 4
    NUMBER = 5
    WS = 6

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Say", "Loop", "Init", "WORD", "NUMBER", "WS" ]

    ruleNames = [ "A", "D", "E", "F", "G", "H", "I", "L", "N", "O", "P", 
                  "R", "S", "T", "U", "W", "Y", "Say", "Loop", "Init", "WORD", 
                  "NUMBER", "WS" ]

    grammarFileName = "placeholder.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


