// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class placeholderLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Say=1, Loop=2, DATATYPE=3, NUMTYPE=4, STRTYPE=5, ID=6, NUMBER=7, IF=8, 
		ENDIF=9, PLUS=10, EQUAL=11, ASSIGN=12, NOTEQUAL=13, SEMICOLON=14, WORD=15, 
		WS=16, NL=17;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Say", "Loop", 
			"DATATYPE", "NUMTYPE", "STRTYPE", "ID", "NUMBER", "IF", "ENDIF", "PLUS", 
			"EQUAL", "ASSIGN", "NOTEQUAL", "SEMICOLON", "WORD", "WS", "NL"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, "'if'", "'endif'", "'+'", 
			"'=='", "'is'", "'!='", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "Say", "Loop", "DATATYPE", "NUMTYPE", "STRTYPE", "ID", "NUMBER", 
			"IF", "ENDIF", "PLUS", "EQUAL", "ASSIGN", "NOTEQUAL", "SEMICOLON", "WORD", 
			"WS", "NL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public placeholderLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "placeholder.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0011\u00db\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!"+
		"\u0007!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002"+
		"&\u0007&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001"+
		"\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013"+
		"\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016"+
		"\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b"+
		"\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0003\u001c"+
		"\u0097\b\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f"+
		"\u0001 \u0004 \u00ab\b \u000b \f \u00ac\u0001 \u0003 \u00b0\b \u0001 "+
		"\u0005 \u00b3\b \n \f \u00b6\t \u0001!\u0001!\u0001!\u0001\"\u0001\"\u0001"+
		"\"\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001$\u0001%\u0001"+
		"%\u0001%\u0001&\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0004(\u00cf\b(\u000b"+
		"(\f(\u00d0\u0001)\u0004)\u00d4\b)\u000b)\f)\u00d5\u0001)\u0001)\u0001"+
		"*\u0001*\u0000\u0000+\u0001\u0000\u0003\u0000\u0005\u0000\u0007\u0000"+
		"\t\u0000\u000b\u0000\r\u0000\u000f\u0000\u0011\u0000\u0013\u0000\u0015"+
		"\u0000\u0017\u0000\u0019\u0000\u001b\u0000\u001d\u0000\u001f\u0000!\u0000"+
		"#\u0000%\u0000\'\u0000)\u0000+\u0000-\u0000/\u00001\u00003\u00005\u0001"+
		"7\u00029\u0003;\u0004=\u0005?\u0006A\u0007C\bE\tG\nI\u000bK\fM\rO\u000e"+
		"Q\u000fS\u0010U\u0011\u0001\u0000\u001e\u0002\u0000AAaa\u0002\u0000BB"+
		"bb\u0002\u0000CCcc\u0002\u0000DDdd\u0002\u0000EEee\u0002\u0000FFff\u0002"+
		"\u0000GGgg\u0002\u0000HHhh\u0002\u0000IIii\u0002\u0000JJjj\u0002\u0000"+
		"KKkk\u0002\u0000LLll\u0002\u0000MMmm\u0002\u0000NNnn\u0002\u0000OOoo\u0002"+
		"\u0000PPpp\u0002\u0000QQqq\u0002\u0000RRrr\u0002\u0000SSss\u0002\u0000"+
		"TTtt\u0002\u0000UUuu\u0002\u0000VVvv\u0002\u0000WWww\u0002\u0000XXxx\u0002"+
		"\u0000YYyy\u0002\u0000ZZzz\u0001\u000009\u0003\u0000AZaz||\u0003\u0000"+
		"\t\t\r\r  \u0001\u0000\n\n\u00c6\u00005\u0001\u0000\u0000\u0000\u0000"+
		"7\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001"+
		"\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000"+
		"\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000"+
		"E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001"+
		"\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000"+
		"\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000"+
		"S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0001W\u0001"+
		"\u0000\u0000\u0000\u0003Y\u0001\u0000\u0000\u0000\u0005[\u0001\u0000\u0000"+
		"\u0000\u0007]\u0001\u0000\u0000\u0000\t_\u0001\u0000\u0000\u0000\u000b"+
		"a\u0001\u0000\u0000\u0000\rc\u0001\u0000\u0000\u0000\u000fe\u0001\u0000"+
		"\u0000\u0000\u0011g\u0001\u0000\u0000\u0000\u0013i\u0001\u0000\u0000\u0000"+
		"\u0015k\u0001\u0000\u0000\u0000\u0017m\u0001\u0000\u0000\u0000\u0019o"+
		"\u0001\u0000\u0000\u0000\u001bq\u0001\u0000\u0000\u0000\u001ds\u0001\u0000"+
		"\u0000\u0000\u001fu\u0001\u0000\u0000\u0000!w\u0001\u0000\u0000\u0000"+
		"#y\u0001\u0000\u0000\u0000%{\u0001\u0000\u0000\u0000\'}\u0001\u0000\u0000"+
		"\u0000)\u007f\u0001\u0000\u0000\u0000+\u0081\u0001\u0000\u0000\u0000-"+
		"\u0083\u0001\u0000\u0000\u0000/\u0085\u0001\u0000\u0000\u00001\u0087\u0001"+
		"\u0000\u0000\u00003\u0089\u0001\u0000\u0000\u00005\u008b\u0001\u0000\u0000"+
		"\u00007\u008f\u0001\u0000\u0000\u00009\u0096\u0001\u0000\u0000\u0000;"+
		"\u0098\u0001\u0000\u0000\u0000=\u009f\u0001\u0000\u0000\u0000?\u00a6\u0001"+
		"\u0000\u0000\u0000A\u00aa\u0001\u0000\u0000\u0000C\u00b7\u0001\u0000\u0000"+
		"\u0000E\u00ba\u0001\u0000\u0000\u0000G\u00c0\u0001\u0000\u0000\u0000I"+
		"\u00c2\u0001\u0000\u0000\u0000K\u00c5\u0001\u0000\u0000\u0000M\u00c8\u0001"+
		"\u0000\u0000\u0000O\u00cb\u0001\u0000\u0000\u0000Q\u00ce\u0001\u0000\u0000"+
		"\u0000S\u00d3\u0001\u0000\u0000\u0000U\u00d9\u0001\u0000\u0000\u0000W"+
		"X\u0007\u0000\u0000\u0000X\u0002\u0001\u0000\u0000\u0000YZ\u0007\u0001"+
		"\u0000\u0000Z\u0004\u0001\u0000\u0000\u0000[\\\u0007\u0002\u0000\u0000"+
		"\\\u0006\u0001\u0000\u0000\u0000]^\u0007\u0003\u0000\u0000^\b\u0001\u0000"+
		"\u0000\u0000_`\u0007\u0004\u0000\u0000`\n\u0001\u0000\u0000\u0000ab\u0007"+
		"\u0005\u0000\u0000b\f\u0001\u0000\u0000\u0000cd\u0007\u0006\u0000\u0000"+
		"d\u000e\u0001\u0000\u0000\u0000ef\u0007\u0007\u0000\u0000f\u0010\u0001"+
		"\u0000\u0000\u0000gh\u0007\b\u0000\u0000h\u0012\u0001\u0000\u0000\u0000"+
		"ij\u0007\t\u0000\u0000j\u0014\u0001\u0000\u0000\u0000kl\u0007\n\u0000"+
		"\u0000l\u0016\u0001\u0000\u0000\u0000mn\u0007\u000b\u0000\u0000n\u0018"+
		"\u0001\u0000\u0000\u0000op\u0007\f\u0000\u0000p\u001a\u0001\u0000\u0000"+
		"\u0000qr\u0007\r\u0000\u0000r\u001c\u0001\u0000\u0000\u0000st\u0007\u000e"+
		"\u0000\u0000t\u001e\u0001\u0000\u0000\u0000uv\u0007\u000f\u0000\u0000"+
		"v \u0001\u0000\u0000\u0000wx\u0007\u0010\u0000\u0000x\"\u0001\u0000\u0000"+
		"\u0000yz\u0007\u0011\u0000\u0000z$\u0001\u0000\u0000\u0000{|\u0007\u0012"+
		"\u0000\u0000|&\u0001\u0000\u0000\u0000}~\u0007\u0013\u0000\u0000~(\u0001"+
		"\u0000\u0000\u0000\u007f\u0080\u0007\u0014\u0000\u0000\u0080*\u0001\u0000"+
		"\u0000\u0000\u0081\u0082\u0007\u0015\u0000\u0000\u0082,\u0001\u0000\u0000"+
		"\u0000\u0083\u0084\u0007\u0016\u0000\u0000\u0084.\u0001\u0000\u0000\u0000"+
		"\u0085\u0086\u0007\u0017\u0000\u0000\u00860\u0001\u0000\u0000\u0000\u0087"+
		"\u0088\u0007\u0018\u0000\u0000\u00882\u0001\u0000\u0000\u0000\u0089\u008a"+
		"\u0007\u0019\u0000\u0000\u008a4\u0001\u0000\u0000\u0000\u008b\u008c\u0003"+
		"%\u0012\u0000\u008c\u008d\u0003\u0001\u0000\u0000\u008d\u008e\u00031\u0018"+
		"\u0000\u008e6\u0001\u0000\u0000\u0000\u008f\u0090\u0003\u0017\u000b\u0000"+
		"\u0090\u0091\u0003\u001d\u000e\u0000\u0091\u0092\u0003\u001d\u000e\u0000"+
		"\u0092\u0093\u0003\u001f\u000f\u0000\u00938\u0001\u0000\u0000\u0000\u0094"+
		"\u0097\u0003;\u001d\u0000\u0095\u0097\u0003=\u001e\u0000\u0096\u0094\u0001"+
		"\u0000\u0000\u0000\u0096\u0095\u0001\u0000\u0000\u0000\u0097:\u0001\u0000"+
		"\u0000\u0000\u0098\u0099\u0003\u001b\r\u0000\u0099\u009a\u0003)\u0014"+
		"\u0000\u009a\u009b\u0003\u0019\f\u0000\u009b\u009c\u0003\u0003\u0001\u0000"+
		"\u009c\u009d\u0003\t\u0004\u0000\u009d\u009e\u0003#\u0011\u0000\u009e"+
		"<\u0001\u0000\u0000\u0000\u009f\u00a0\u0003%\u0012\u0000\u00a0\u00a1\u0003"+
		"\'\u0013\u0000\u00a1\u00a2\u0003#\u0011\u0000\u00a2\u00a3\u0003\u0011"+
		"\b\u0000\u00a3\u00a4\u0003\u001b\r\u0000\u00a4\u00a5\u0003\r\u0006\u0000"+
		"\u00a5>\u0001\u0000\u0000\u0000\u00a6\u00a7\u0003\u0011\b\u0000\u00a7"+
		"\u00a8\u0003\u0007\u0003\u0000\u00a8@\u0001\u0000\u0000\u0000\u00a9\u00ab"+
		"\u0007\u001a\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000\u00ab\u00ac"+
		"\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\u00ac\u00ad"+
		"\u0001\u0000\u0000\u0000\u00ad\u00af\u0001\u0000\u0000\u0000\u00ae\u00b0"+
		"\u0005.\u0000\u0000\u00af\u00ae\u0001\u0000\u0000\u0000\u00af\u00b0\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b4\u0001\u0000\u0000\u0000\u00b1\u00b3\u0007"+
		"\u001a\u0000\u0000\u00b2\u00b1\u0001\u0000\u0000\u0000\u00b3\u00b6\u0001"+
		"\u0000\u0000\u0000\u00b4\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001"+
		"\u0000\u0000\u0000\u00b5B\u0001\u0000\u0000\u0000\u00b6\u00b4\u0001\u0000"+
		"\u0000\u0000\u00b7\u00b8\u0005i\u0000\u0000\u00b8\u00b9\u0005f\u0000\u0000"+
		"\u00b9D\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005e\u0000\u0000\u00bb\u00bc"+
		"\u0005n\u0000\u0000\u00bc\u00bd\u0005d\u0000\u0000\u00bd\u00be\u0005i"+
		"\u0000\u0000\u00be\u00bf\u0005f\u0000\u0000\u00bfF\u0001\u0000\u0000\u0000"+
		"\u00c0\u00c1\u0005+\u0000\u0000\u00c1H\u0001\u0000\u0000\u0000\u00c2\u00c3"+
		"\u0005=\u0000\u0000\u00c3\u00c4\u0005=\u0000\u0000\u00c4J\u0001\u0000"+
		"\u0000\u0000\u00c5\u00c6\u0005i\u0000\u0000\u00c6\u00c7\u0005s\u0000\u0000"+
		"\u00c7L\u0001\u0000\u0000\u0000\u00c8\u00c9\u0005!\u0000\u0000\u00c9\u00ca"+
		"\u0005=\u0000\u0000\u00caN\u0001\u0000\u0000\u0000\u00cb\u00cc\u0005;"+
		"\u0000\u0000\u00ccP\u0001\u0000\u0000\u0000\u00cd\u00cf\u0007\u001b\u0000"+
		"\u0000\u00ce\u00cd\u0001\u0000\u0000\u0000\u00cf\u00d0\u0001\u0000\u0000"+
		"\u0000\u00d0\u00ce\u0001\u0000\u0000\u0000\u00d0\u00d1\u0001\u0000\u0000"+
		"\u0000\u00d1R\u0001\u0000\u0000\u0000\u00d2\u00d4\u0007\u001c\u0000\u0000"+
		"\u00d3\u00d2\u0001\u0000\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000"+
		"\u00d5\u00d3\u0001\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d7\u0001\u0000\u0000\u0000\u00d7\u00d8\u0006)\u0000\u0000\u00d8"+
		"T\u0001\u0000\u0000\u0000\u00d9\u00da\u0007\u001d\u0000\u0000\u00daV\u0001"+
		"\u0000\u0000\u0000\u0007\u0000\u0096\u00ac\u00af\u00b4\u00d0\u00d5\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}